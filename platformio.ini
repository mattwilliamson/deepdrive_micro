; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = pico

[env]
framework = arduino
lib_deps = 
	https://github.com/micro-ROS/micro_ros_platformio
    https://github.com/end2endzone/AnyRtttl
	bjoernboeckle/HC_SR04@1.0.1
	; https://github.com/mattwilliamson/tone-player.git
	; askuric/Simple FOC@2.3.2
	; simplefoc/SimpleFOCDrivers@1.0.6
lib_archive = false
board_microros_distro = humble
board_microros_transport = serial
; build_src_filter = +<calibration.cpp>

[env:pico]
; platform = raspberrypi
platform = https://github.com/maxgerhardt/platform-raspberrypi.git

; platform_packages =
;   toolchain-gccarmnoneeabi@~1.90301.0/
;   framework-arduinopico@https://github.com/earlephilhower/arduino-pico.git@#3.9.4
; platform = https://github.com/platformio/platform-raspberrypi.git
; platform = platformio/raspberrypi@^1.14.0
board = pico
board_build.core = earlephilhower

board_build.mcu = rp2040
; change MCU frequency
board_build.f_cpu = 133000000L
; board_build.filesystem_size = 0.5m


; OPTION 1: Use the picoprobe as upload and debug tool
; note: newer PicoProbe firmwares emulate a CMSIS-DAP, so you
; use “cmsis-dap” as upload_protocol and debug_tool.
upload_protocol = cmsis-dap
debug_tool = cmsis-dap
; debug_speed = 30000
; debug_speed = 5000
; upload_speed 

; debug_speed = 5000
; upload_protocol = picoprobe
; debug_tool = picoprobe

; OPTION 2: Use the picotool uploader
; upload_protocol = picotool

; OPTION 3: Use the official Raspberry Pi Pico SDK uploader
; upload_port = /mnt/deepdrive_micro
; upload_protocol = mbed

monitor_speed = 115200

build_type = debug

debug_extra_cmds = 
	continue
